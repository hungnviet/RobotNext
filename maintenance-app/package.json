{
  "name": "maintaince-app",
  "version": "0.1.0",
  "main": "public/electron.js",
  "homepage": "./",
  "dependencies": {
    "@onedoc/react-print": "^0.1.128",
    "@react-pdf/renderer": "^3.4.2",
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "cors": "^2.8.5",
    "electron-is-dev": "^3.0.1",
    "express": "^4.19.2",
    "html2canvas": "^1.4.1",
    "jspdf": "^2.5.1",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-icons": "^5.0.1",
    "react-modal": "^3.16.1",
    "react-pdf": "^7.7.1",
    "react-router-dom": "^6.22.3",
    "react-scripts": "5.0.1",
    "react-select": "^5.8.0",
    "react-to-pdf": "^1.0.1",
    "react-to-print": "^2.15.1",
    "react-toastify": "^10.0.5",
    "web-vitals": "^2.1.4"
  },
  "scripts": {
    "react-start": "react-scripts start",
    "react-build": "react-scripts build && (cp public/electron.js build/electron.js || copy public\\electron.js build\\electron.js)",
    "react-test": "react-scripts test",
    "react-eject": "react-scripts eject",
    "electron-build": "electron-builder",
    "build": " npm run react-build && npm run electron-build --win",
    "start": "concurrently \"cross-env BROWSER=none npm run react-start\" \"wait-on http://localhost:3000 && electron .\""
  },
  "eslintConfig": {
    "extends": [
      "react-app",
      "react-app/jest"
    ]
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "devDependencies": {
    "@babel/core": "^7.24.4",
    "@babel/preset-env": "^7.24.4",
    "@babel/preset-react": "^7.24.1",
    "babel-loader": "^9.1.3",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "electron": "^31.3.0",
    "electron-builder": "^24.13.3",
    "wait-on": "^7.2.0",
    "webpack": "^5.91.0",
    "webpack-cli": "^5.1.4"
  },
  "build": {
    "appId": "your.app.id",
    "files": [
      "public/electron.js",
      "build/**/*",
      "node_modules/**/*",
      "public/images/**/*"
    ],
    "extraResources": [
      {
        "from": "../Data/",
        "to": "Data",
        "filter": [
          "**/*"
        ]
      },
      {
        "from": "../images/",
        "to": "images",
        "filter": [
          "**/*"
        ]
      }
    ],
    "win": {
      "target": "nsis"
    },
    "mac": {
      "target": "dmg"
    }
  }
}
